/* Generated By:JavaCC: Do not edit this line. ISDLParserConstants.java */
package avrora.core.isdl.parser;

public interface ISDLParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 9;
  int FORMAL_COMMENT = 10;
  int MULTI_LINE_COMMENT = 11;
  int INTEGER_LITERAL = 13;
  int DECIMAL_LITERAL = 14;
  int HEX_LITERAL = 15;
  int BIN_LITERAL = 16;
  int OCTAL_LITERAL = 17;
  int CHARACTER_LITERAL = 18;
  int STRING_LITERAL = 19;
  int INSTRUCTION = 20;
  int ARCHITECTURE = 21;
  int FORMAT = 22;
  int OPERAND = 23;
  int WHERE = 24;
  int REGISTER = 25;
  int IMMEDIATE = 26;
  int ADDRESS = 27;
  int ENCODING = 28;
  int EXECUTE = 29;
  int LOCAL = 30;
  int IF = 31;
  int ELSE = 32;
  int AND = 33;
  int OR = 34;
  int XOR = 35;
  int SUBROUTINE = 36;
  int INLINE = 37;
  int EXTERNAL = 38;
  int RETURN = 39;
  int BOOLEAN_LITERAL = 40;
  int CYCLES = 41;
  int PSEUDO = 42;
  int LBRACKET = 43;
  int RBRACKET = 44;
  int EQUALS = 45;
  int COMMA = 46;
  int LPAREN = 47;
  int RPAREN = 48;
  int SEMI = 49;
  int SHIFTLEFT = 50;
  int SHIFTRIGHT = 51;
  int ADD = 52;
  int SUB = 53;
  int MUL = 54;
  int DIV = 55;
  int B_AND = 56;
  int B_OR = 57;
  int B_XOR = 58;
  int NOT = 59;
  int B_COMP = 60;
  int EQUAL = 61;
  int NOTEQUAL = 62;
  int LESS = 63;
  int LESSEQ = 64;
  int GREATER = 65;
  int GREATEREQ = 66;
  int DOLLAR = 67;
  int IDENTIFIER = 68;
  int LETTER = 69;
  int DIGIT = 70;

  int DEFAULT = 0;
  int IN_SINGLE_LINE_COMMENT = 1;
  int IN_FORMAL_COMMENT = 2;
  int IN_MULTI_LINE_COMMENT = 3;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "<token of kind 7>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 12>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<BIN_LITERAL>",
    "<OCTAL_LITERAL>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "\"instruction\"",
    "\"architecture\"",
    "\"format\"",
    "\"operand\"",
    "\"where\"",
    "\"register\"",
    "\"immediate\"",
    "\"address\"",
    "\"encoding\"",
    "\"execute\"",
    "\"local\"",
    "\"if\"",
    "\"else\"",
    "\"and\"",
    "\"or\"",
    "\"xor\"",
    "\"subroutine\"",
    "\"inline\"",
    "\"external\"",
    "\"return\"",
    "<BOOLEAN_LITERAL>",
    "\"cycles\"",
    "\"pseudo\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\"<<\"",
    "\">>\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"!\"",
    "\"~\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"$\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"[\"",
    "\"]\"",
    "\":\"",
  };

}
