architecture ppc {

    format IFORM = { opcode[5:0], li[23:0], aa[0], lk[0] };
    format BFORM = { opcode[5:0], bo[4:0], bi[4:0], aa[0], lk[0] };
    format SCFORM = { opcode[5:0], 0[23:0], 1[0], 0[0] };
    format DFORM1 = { opcode[5:0], d[4:0], a[4:0], imm[15:0] };
    format DFORM2 = { opcode[5:0], crfd[2:0], 0[0], l[0], a[4:0], imm[15:0] };
    format XOFORM = { opcode[5:0], d[4:0], a[4:0], b[4:0], xop[9:0], rc[0] };

    operand SIMM16[16]: immediate = [-32768, 32767];

    operand GPR[5]: register = {
        r0 = 0,  r1 = 1,  r2 = 2,  r3 = 3,
        r0 = 4,  r1 = 5,  r2 = 6,  r3 = 7,
        r0 = 8,  r1 = 9,  r2 = 10, r3 = 11,
        r0 = 12, r1 = 13, r2 = 14, r3 = 15,
        r0 = 16, r1 = 17, r2 = 18, r3 = 19,
        r0 = 20, r1 = 21, r2 = 22, r3 = 23,
        r0 = 24, r1 = 25, r2 = 26, r3 = 27,
        r0 = 28, r1 = 29, r2 = 30, r3 = 31
    };

    registers GPR[32]: int = {
        r0,  r1,  r2,  r3,  r4,  r5,  r6,  r7,
        r8,  r9,  r10, r11, r12, r13, r14, r15,
        r16, r17, r18, r19, r20, r21, r22, r23,
        r24, r25, r26, r27, r28, r29, r30, r31
    };

    registers FPR[64]: double = {
        fpr0,  fpr1,  fpr2,  fpr3,  fpr4,  fpr5,  fpr6,  fpr7,
        fpr8,  fpr9,  fpr10, fpr11, fpr12, fpr13, fpr14, fpr15,
        fpr16, fpr17, fpr18, fpr19, fpr20, fpr21, fpr22, fpr23,
        fpr24, fpr25, fpr26, fpr27, fpr28, fpr29, fpr30, fpr31,
    };

    register CR[32]: int;
    register FPCR[32]: int;
    register XER[32]: int;
    register LR[32]: int;
    register CTR[32]: int;

    memory RAM[32][128mb]: int;

    mapping GPR[0-31] <=> RAM[0-31];
    mapping IOREGS[0-63] <=> RAM[32-95];
    mapping SREG <=> IOREGS[63];
    mapping I <=> SREG[7];
    mapping T <=> SREG[6];
    mapping H <=> SREG[5];
    mapping S <=> SREG[4];
    mapping V <=> SREG[3];
    mapping N <=> SREG[2];
    mapping Z <=> SREG[1];
    mapping C <=> SREG[0];

    instruction "add" rd: GPR, ra: GPR, rb: GPR {
        // TODO: this encoding format is not correct
        encoding = XOFORM;
        execute = {
            $GPR(rd) = performAddition($GPR(ra), $GPR(rb), 0, false, false);
        };
    };

    instruction "addo" rd: GPR, ra: GPR, rb: GPR {
        // TODO: this encoding format is not correct
        encoding = XOFORM;
        execute = {
            $GPR(rd) = performAddition($GPR(ra), $GPR(rb), 0, true, false);
        };
    };

    instruction "add." rd: GPR, ra: GPR, rb: GPR {
        // TODO: this encoding format is not correct
        encoding = XOFORM;
        execute = {
            $regs(rd) = performAddition($regs(ra), $regs(rb), 0, false, true);
        };
    };

    instruction "addo." rd: GPR, ra: GPR, rb: GPR {
        // TODO: this encoding format is not correct
        encoding = XOFORM;
        execute = {
            $regs(rd) = performAddition($regs(ra), $regs(rb), 0, true, true);
        };
    };

    instruction "addc" rd: GPR, ra: GPR, rb: GPR {
        // TODO: this encoding format is not correct
        encoding = XOFORM;
        execute = {
            $regs(rd) = performAddition($regs(ra), $regs(rb), XER, false, false);
        };
    };

    instruction "addco" rd: GPR, ra: GPR, rb: GPR {
        // TODO: this encoding format is not correct
        encoding = XOFORM;
        execute = {
            $regs(rd) = performAddition($regs(ra), $regs(rb), XER, true, false);
        };
    };

    instruction "addc." rd: GPR, ra: GPR, rb: GPR {
        // TODO: this encoding format is not correct
        encoding = XOFORM;
        execute = {
            $regs(rd) = performAddition($regs(ra), $regs(rb), XER, false, true);
        };
    };

    instruction "addco." rd: GPR, ra: GPR, rb: GPR {
        // TODO: this encoding format is not correct
        encoding = XOFORM;
        execute = {
            $regs(rd) = performAddition($regs(ra), $regs(rb), XER, true, true);
        };
    };

    instruction "addic" rd: GPR, ra: GPR, imm: SIMM16 {
        // TODO: this encoding format is not correct
        encoding = XOFORM;
    };

    instruction "addic." rd: GPR, ra: GPR, imm: SIMM16 {
        // TODO: this encoding format is not correct
        encoding = XOFORM;
    };
}